version: '4'

services:
  albumserver:
    container_name: albumserver
    build: 
      context: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    command: gunicorn photo_album.wsgi --bind 0.0.0.0:8000

  nginx:
    image: nginx:latest
    ports:
      - "80:8080"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - album_build:/var/www/client
    container_name: nginx_cont
    depends_on:
      - albumserver
      - albumfrontend
      - albumclient

  albumfrontend:
    container_name: albumfrontend
    build: 
      context: ./frontend
    ports:
      - "5000:5000"
    env_file:
      - ./frontend/.env
    depends_on:
      - albumserver
    command: npm run start

  albumclient:
    container_name: albumclient
    build: 
      context: ./client
    volumes:
      - album_build:/client/build

  mysql:
    restart: always
    image: mysql:latest
    environment:
       - MYSQL_USER="${MYSQL_USER}"
       - MYSQL_DB="${MYSQL_DB}"
       - MYSQL_PASSWORD="${MYSQL_PASSWORD}"
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  album_build:
  mysql_data:
